{"version":3,"sources":["redux/types.js","redux/action.js","redux/sagas.js","components/Navbar.js","context.js","components/Todo/TodoItem.js","components/Todo/TodoList.js","components/Loader.js","components/Todo/Todo.js","components/Modal/Modal.js","components/ReduxSaga/PostForm.js","components/ReduxSaga/Post.js","components/ReduxSaga/Posts.js","components/ReduxSaga/FetchedPosts.js","components/ReduxSaga/ReduxSaga.js","App.js","reportWebVitals.js","redux/postsReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/middleware.js","index.js"],"names":["CREATE_POST","FETCH_POST","REQUEST_POSTS","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","hideLoader","type","showAlert","text","dispatch","payload","setTimeout","sagaWatcher","sagaWorker","takeEvery","put","call","fetchPosts","a","fetch","response","json","Navbar","className","to","Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","button","background","color","cursor","outline","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","join","checked","id","title","onClick","ul","listStyle","TodoList","props","todos","map","onToggle","Loader","AddTodo","lazy","Todo","useState","setTodos","loading","setLoading","useEffect","then","Provider","value","filter","Suspense","fallback","width","margin","onCreate","concat","Date","now","length","Modal","state","isOpen","setState","this","Component","PostForm","submitHandler","event","preventDefault","trim","newPost","toString","console","log","createPosts","changeInputHandler","persist","prev","target","name","onSubmit","alert","role","htmlFor","marginTop","mapDispatchToProps","post","connect","app","syncPosts","posts","Post","useDispatch","useSelector","fetchedPosts","ReduxSaga","FetchedPosts","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","forbidden","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","thunk","next","w","includes","window","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6ead184.chunk.js","sourcesContent":["export const CREATE_POST = 'POST/CREATE_POST';\nexport const FETCH_POST = 'POST/FETCH_POST';\nexport const REQUEST_POSTS = 'POST/REQUEST_POSTS';\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\nexport const SHOW_ALERT = 'APP/SHOW_ALERT';\nexport const HIDE_ALERT = 'APP/HIDE_ALERT';\n","import {CREATE_POST, HIDE_ALERT, HIDE_LOADER, REQUEST_POSTS, SHOW_ALERT, SHOW_LOADER} from \"./types\";\nimport {FETCH_POST} from \"./types\";\n\nexport default function createPosts(post) {\n    return {\n        type: CREATE_POST,\n        payload: post,\n    }\n}\n\nexport function showLoader() {\n    return {\n        type: SHOW_LOADER\n    }\n}\n\nexport function hideLoader() {\n    return {\n        type: HIDE_LOADER\n    }\n}\n\nexport function showAlert(text) {\n    return dispatch => {\n        dispatch(\n            {\n                type: SHOW_ALERT,\n                payload: text\n            }\n        )\n        setTimeout(() => {\n            dispatch(hideAlert())\n        }, 3000)\n    }\n}\n\nexport function hideAlert() {\n    return {\n        type: HIDE_ALERT\n    }\n}\n\nexport function fetchPosts() {\n    return {\n        type: REQUEST_POSTS,\n    }\n    // return async dispatch => {\n    //     try {\n    //         dispatch(showLoader());\n    //         const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5');\n    //         const json = await response.json();\n    //         dispatch({type: FETCH_POST, payload: json});\n    //         dispatch(hideLoader());\n    //     } catch (e) {\n    //         dispatch(showAlert('Что пошло не так'))\n    //         dispatch(hideLoader());\n    //     }\n    // }\n}\n","import {call, put, takeEvery} from \"@redux-saga/core/effects\";\nimport {FETCH_POST, REQUEST_POSTS} from \"./types\";\nimport {hideLoader, showAlert, showLoader} from \"./action\";\n\nexport function* sagaWatcher() {\n    yield takeEvery(REQUEST_POSTS, sagaWorker)\n}\n\nfunction* sagaWorker() {\n    try {\n        yield put(showLoader())\n        const payload = yield call(fetchPosts)\n        yield put({type: FETCH_POST, payload})\n        yield  put(hideLoader())\n    } catch (e) {\n        yield put(showAlert('Что пошло не так'))\n        yield put(hideLoader());\n    }\n}\n\nasync function fetchPosts() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5');\n    return await response.json();\n}\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navBar\">\n            {/*<div className=\"nav-item\">*/}\n            {/*    <NavLink to=\"/reactjs_redux_saga\">*/}\n            {/*        Home*/}\n            {/*    </NavLink>*/}\n            {/*</div>*/}\n            <div className=\"nav-item\">\n                <NavLink to=\"/reactjs_redux_saga/todo_list\">\n                    Todo List\n                </NavLink>\n            </div>\n            <div className=\"nav-item\">\n                <NavLink to=\"/reactjs_redux_saga/modal\">\n                    Modal\n                </NavLink>\n            </div>\n            <div className=\"nav-item\">\n                <NavLink to=\"/reactjs_redux_saga/redux_saga\">\n                    Redux & Saga\n                </NavLink>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React from 'react';\n\nconst Context = React.createContext()\n\nexport default Context;\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport Context from \"../../context\";\n\nconst styles = {\n    li: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '.5rem 1rem',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        marginBottom: '.5rem'\n    },\n    input: {\n        marginRight: '1rem'\n    },\n    button: {\n        background: 'rgba(139, 0, 0, 0.6)',\n        color: 'darkred',\n        border: '1px solid rgba(139, 0, 0, 0.1)',\n        borderRadius: '50%',\n        padding: '0.15rem 0.35rem',\n        cursor: 'pointer',\n        outline: 'none'\n    }\n}\n\nfunction TodoItem({todo, index, onChange}) {\n    const {removeTodo} = useContext(Context);\n\n    const classes = [];\n\n    if (todo.completed) {\n        classes.push('done')\n    }\n    return (\n        <li className=\"todoItem\" style={styles.li}>\n            <span className={classes.join(' ')}>\n                <input type=\"checkbox\"\n                       checked={todo.completed}\n                       style={styles.input}\n                       onChange={() => onChange(todo.id)}/>\n                <strong>{index + 1}.</strong>\n                &nbsp;\n                {todo.title}\n            </span>\n            <button style={styles.button}\n                    onClick={() => removeTodo(todo.id)}>\n                &times;\n            </button>\n        </li>\n    )\n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    index: PropTypes.number,\n    onChange: PropTypes.func.isRequired\n\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from \"./TodoItem\";\n\nconst styles = {\n    ul: {\n        listStyle: 'none',\n    }\n}\n\nfunction TodoList (props) {\n\n        return (\n            <div className=\"todoListContainer\">\n                <h1>React tutorial</h1>\n                <ul style={styles.ul}>\n                    {\n                        props.todos.map( (todo, index) => {\n                            return(\n                                <TodoItem key={todo.id}\n                                          todo={todo}\n                                          index={index}\n                                          onChange={props.onToggle}\n                                />\n                            )\n                        })\n                    }\n\n                </ul>\n            </div>\n        )\n}\n\nTodoList.propTypes = {\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onToggle: PropTypes.func.isRequired\n\n}\n\nexport default TodoList;\n","import React from 'react';\n\nfunction Loader () {\n    return <div className=\"loaderContainer\">\n        <div className=\"lds-ring\"><div/><div/><div/><div/></div>\n    </div>\n\n}\n\nexport default Loader;\n","import React, {useState, useEffect} from 'react';\nimport Context from \"../../context\";\nimport TodoList from \"./TodoList\";\nimport Loader from \"../Loader\";\n// import AddTodo from \"./components/Todo/AddTodo\";\n\nconst AddTodo = React.lazy(() => import('./AddTodo'))\n\nfunction Todo() {\n\n    const [todos, setTodos] = useState([\n        // {id: 1, completed: false, title: 'buy milk'},\n        // {id: 2, completed: false, title: 'buy coffee'},\n        // {id: 3, completed: false, title: 'buy cake'},\n    ]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n            .then(response => response.json())\n            .then(todos => {\n                setTimeout(() => {\n                    setTodos(todos);\n                    setLoading(false);\n                }, 2000)\n            })\n    }, [])\n\n    function toggleTodo(id) {\n        setTodos(todos.map(todo => {\n            if (todo.id === id) {\n                todo.completed = !todo.completed\n            }\n            return todo\n        }))\n    }\n\n    function removeTodo(id) {\n        setTodos(todos.filter(todo => todo.id !== id))\n    }\n\n    function addTodo(title) {\n        setTodos(todos.concat([{\n            title,\n            id: Date.now(),\n            completed: false\n        }]))\n    }\n\n    return(\n\n        <Context.Provider value={{removeTodo}}>\n                <React.Suspense fallback={<p style={{width: '85vw', margin: '1rem auto'}}>Loading....</p>}>\n                    <AddTodo onCreate={addTodo}/>\n                </React.Suspense>\n                {loading && <Loader/>}\n                {\n                    todos.length ? <TodoList todos={todos} onToggle={toggleTodo}/> :\n                        loading ? null :  <p style={{margin: '3rem auto'}}>No todos!</p>\n                }\n        </Context.Provider>\n\n    )\n}\n\nexport default Todo;\n","import React from 'react';\n\nexport default class Modal extends React.Component {\n\n    state = {\n        isOpen: false\n    }\n\n    render() {\n        return (\n            <>\n                <button className=\"modalBtnOpen\" onClick={() => this.setState({isOpen: true})}>Open Modal</button>\n\n                {this.state.isOpen && (<div className=\"modal\">\n                            <div className=\"modalBody\">\n                                <h1>Modal title</h1>\n                                <p>I am awesome modal</p>\n                                <button onClick={() => this.setState({isOpen: false})} className=\"modalBtnClose\">Close modal</button>\n                            </div>\n                        </div>)}\n\n            </>\n\n        )\n    }\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport createPosts, {showAlert} from \"../../redux/action\";\n\n class PostForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: ''\n        }\n    }\n    submitHandler = event => {\n        event.preventDefault();\n        const {title} = this.state;\n\n        if(!title.trim()){\n           return this.props.showAlert('Название поста не может быть пустым')\n        }\n        const newPost = {\n            title, id: Date.now().toString(),\n        }\n        console.log(newPost);\n        this.props.createPosts(newPost);\n        this.setState({title: ''})\n\n    }\n\n\n    changeInputHandler = event => {\n        event.persist();\n        this.setState(prev => ({\n                ...prev, ...{[event.target.name]: event.target.value}\n            })\n        )\n    }\n\n    render() {\n\n        return (\n            <form onSubmit={this.submitHandler}>\n\n                {this.props.alert && <div className=\"alert alert-warning\" role=\"alert\">\n                    {this.props.alert}\n                </div>}\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Заголовок поста</label>\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           id=\"title\"\n                           value={this.state.title}\n                           name=\"title\"\n                           onChange={this.changeInputHandler}\n                    />\n                </div>\n                <div style={{marginTop: '1rem'}}>\n                    <button className=\"btn btn-success\" type=\"submit\">Создать</button>\n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapDispatchToProps =  {\n        createPosts, showAlert\n}\n\nconst mapStateToProps = state => ({\n     alert: state.app.alert\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\n","import React from 'react';\n\nexport default ({post}) => {\n    return <div className=\"card\">\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{post.title}</h5>\n        </div>\n    </div>\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Post from \"./Post\";\n\n const Posts = ({syncPosts}) => {\n    if (!syncPosts.length) {\n        return <p className=\"text-center\">Постов пока нет</p>\n    }\n\n    return  syncPosts.map(post => {return <Post post={post} key={post.id}/>})\n}\n\nconst mapStateToProps = state => {\n    return {\n        syncPosts: state.posts.posts\n    }\n}\n\nexport default connect(mapStateToProps)(Posts);\n","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Post from \"./Post\";\nimport { fetchPosts } from \"../../redux/action\";\n\nexport default () => {\n\n    const dispatch = useDispatch();\n    const posts = useSelector(state => state.posts.fetchedPosts );\n    const loading = useSelector(state => state.app.loading);\n\n    if (loading) {\n        return (\n            <div className=\"spinner-border text-danger\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n        )\n    }\n\n    if (!posts.length) {\n        return <button onClick={() => dispatch(fetchPosts())}\n            className=\"btn btn-primary\">Загрузить</button>\n    }\n    return posts.map(post => {return <Post post={post} key={post.id}/>})\n}\n","import React from 'react';\nimport PostForm from \"./PostForm\";\nimport Posts from \"./Posts\";\nimport FetchedPosts from \"./FetchedPosts\";\n\nexport default function ReduxSaga() {\n    return (\n        <div className=\"reduxSagaContainer\">\n            <div className=\"container pt-3\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <PostForm/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h2>Синхронные посты</h2>\n                        <Posts />\n                    </div>\n                    <div className=\"col\">\n                        <h2>Асинхронные посты</h2>\n                        <FetchedPosts posts={[]}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.sass';\nimport Navbar from \"./components/Navbar\";\nimport Todo from \"./components/Todo/Todo\";\nimport {Route} from 'react-router-dom';\nimport Modal from \"./components/Modal/Modal\";\nimport ReduxSaga from \"./components/ReduxSaga/ReduxSaga\";\n\nfunction App() {\n\n    return (\n        <div className=\"container\">\n            <Navbar/>\n            <Route path=\"/reactjs_redux_saga/modal\" render={() => <Modal/>}/>\n            <Route path=\"/reactjs_redux_saga/todo_list\" render={() => <Todo/>}/>\n            <Route path=\"/reactjs_redux_saga/redux_saga\" render={() => <ReduxSaga/>}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CREATE_POST} from \"./types\";\nimport {FETCH_POST} from \"./types\";\nimport {SHOW_LOADER} from \"./types\";\nimport {PAST_LOADER} from \"./types\";\n\nconst initialState = {\n    posts: [],\n    fetchedPosts: []\n}\n// Pure Functions\nexport const postReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_POST:\n            //first method\n            return {...state, posts: state.posts.concat([action.payload])}\n            //second method\n            //return {...state, posts: [...state.posts, action.payload]}\n        case FETCH_POST:\n            return { ...state, fetchedPosts: action.payload }\n        default:\n            return state\n    }\n}\n","import { HIDE_ALERT, HIDE_LOADER, SHOW_ALERT, SHOW_LOADER } from \"./types\";\n\n\nconst initialState = {\n    loading: false,\n    alert: null,\n}\n\nexport const appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SHOW_LOADER:\n            return { ...state, loading: true }\n        case HIDE_LOADER:\n            return { ...state, loading: false }\n        case SHOW_ALERT:\n            return { ...state, alert: action.payload }\n        case HIDE_ALERT:\n            return { ...state, alert: null }\n        default: return state;\n    }\n}\n","import React from 'react';\nimport { combineReducers } from \"redux\";\nimport { postReducer } from \"./postsReducer\";\nimport { appReducer } from \"./appReducer\";\n\nexport const rootReducer = combineReducers({\n    posts: postReducer,\n    app: appReducer,\n})\n","//фильтрация вводимых слов\n\nimport {CREATE_POST} from \"./types\";\nimport {showAlert} from \"./action\";\n\nconst forbidden = ['fuck', 'spam', 'php']\n\nexport function forbiddenWordsMiddleware({dispatch}) {\n    return function (next) {\n        return function (action) {\n            if (action.type === CREATE_POST) {\n                const found = forbidden.filter(w => action.payload.title.includes(w));\n                if (found.length) {\n                    return dispatch(showAlert('Error... It is spam! Go home!'))\n                }\n            }\n            return next(action)\n        }\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {compose, createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport {sagaWatcher} from \"./redux/sagas\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {rootReducer} from './redux/rootReducer';\nimport {forbiddenWordsMiddleware} from \"./redux/middleware\";\n\nconst saga = createSagaMiddleware()\n\nconst store = createStore(rootReducer,compose(\n    applyMiddleware(\n        thunk, forbiddenWordsMiddleware, saga\n    ),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nsaga.run(sagaWatcher)\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}